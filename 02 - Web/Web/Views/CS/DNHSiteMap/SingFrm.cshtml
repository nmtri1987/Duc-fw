@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using Biz.Core.Models;
@model DNHSiteMap
@{
    ViewBag.Title = "DNHSiteMap";
}
<div class="row">
    @using (Ajax.BeginForm("Create", "DNHSiteMap",
                                        new AjaxOptions
                                        {
                                            InsertionMode = InsertionMode.Replace,
                                            HttpMethod = "POST",
                                            UpdateTargetId = "DNHSiteMaplist",
                                            LoadingElementId = "loadingDisplay",
                                            OnSuccess = "closePopup()",
                                            OnBegin = "onBegin",
                                            OnComplete = "onComplete",
                                        }, new { @class = "form-horizontal", @id = "frmDNHSiteMap", enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)
        @Html.HiddenFor(m => m.NodeID,new {@class= "form-control" })

     
        <div class="ibox float-e-margins">
            
            <div class="ibox-title">
                <div class="panel-heading">
                    <button type="submit" class="btn btn-sm btn-primary" name="btnsave" value="save"><i class="fa fa-save"></i></button>
                    <button class="btn btn-sm btn-primary" type="button" name="Action" value="Refresh" data-url = "/DNHSiteMap/Get" data-key-id="NodeID" data-form-id = "frmDNHSiteMap" data-action="refresh" onclick="RefreshForm(this)"><i class="fa fa-refresh"></i></button>
                    <button type="button" class="btn btn-sm btn-primary" data-url ="/DNHSiteMap/Get" data-action="add" data-form-id = "frmDNHSiteMap" data-key-id="NodeID" onclick="RefreshForm(this)">
                        <i class="fa fa-plus"></i>
                    </button>
                    <button type="button" class="btn btn-sm btn-primary" data-url="/DNHSiteMap/DNHSiteMapEvt" data-action="delete" data-form-id="frmDNHSiteMap" data-key-id="NodeID" onclick="DeleteData(this)">
                        <i class="fa fa-trash"></i>
                    </button>
                </div>
               @* @L("DNHSiteMap")*@
            </div>
            <div class="ibox-content">
                <div id="loadingDisplay" class="progressBarLoad">
                    <h2>@L("Progressing")...</h2>
                    <div class="progress progress-striped ">
                        <div id="loadProgressBar" class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 20%"></div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-2 control-label">@L("NodeID")</label>
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.NodeID, new { htmlAttributes = new { @class = "form-control DNHSiteMapsrc", @placeholder = L("NodeID"), @data_url = "/DNHSiteMap/Search", @data_form_id = "frmDNHSiteMap" } })
                        @Html.ValidationMessageFor(model => model.NodeID, "", new { @class = "text-danger" })
                    </div>
                </div>
			      <div class="form-group">
             <label class="col-sm-2 control-label">@L("CompanyID")</label>
             <div class="col-sm-10">
               @Html.EditorFor(model => model.CompanyID, new { htmlAttributes = new { @class = "form-control ", @placeholder=L("CompanyID")} })
               @Html.ValidationMessageFor(model => model.CompanyID, "", new { @class = "text-danger" })
             </div>
         </div>  <div class="form-group">
             <label class="col-sm-2 control-label">@L("NodeID")</label>
             <div class="col-sm-10">
               @Html.EditorFor(model => model.NodeID, new { htmlAttributes = new { @class = "form-control",@disabled = ""} })
               @Html.ValidationMessageFor(model => model.NodeID, "", new { @class = "text-danger" })
             </div>
         </div>  <div class="form-group">
             <label class="col-sm-2 control-label">@L("Position")</label>
             <div class="col-sm-10">
               @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control ", @placeholder=L("Position")} })
               @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
             </div>
         </div>  <div class="form-group">
             <label class="col-sm-2 control-label">@L("Title")</label>
             <div class="col-sm-10">
               @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control ", @placeholder=L("Title")} })
               @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
             </div>
         </div>  <div class="form-group">
             <label class="col-sm-2 control-label">@L("Description")</label>
             <div class="col-sm-10">
               @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control ", @placeholder=L("Description")} })
               @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
             </div>
         </div>  <div class="form-group">
             <label class="col-sm-2 control-label">@L("Url")</label>
             <div class="col-sm-10">
               @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control ", @placeholder=L("Url")} })
               @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
             </div>
         </div>  <div class="form-group">
             <label class="col-sm-2 control-label">@L("Expanded")</label>
             <div class="col-sm-10">
               @Html.EditorFor(model => model.Expanded, new { htmlAttributes = new { @class = "form-control i-checks js-switch", @placeholder=L("Expanded")} })
               @Html.ValidationMessageFor(model => model.Expanded, "", new { @class = "text-danger" })
             </div>
         </div>  <div class="form-group">
             <label class="col-sm-2 control-label">@L("IsFolder")</label>
             <div class="col-sm-10">
               @Html.EditorFor(model => model.IsFolder, new { htmlAttributes = new { @class = "form-control i-checks js-switch", @placeholder=L("IsFolder")} })
               @Html.ValidationMessageFor(model => model.IsFolder, "", new { @class = "text-danger" })
             </div>
         </div>  <div class="form-group">
             <label class="col-sm-2 control-label">@L("ScreenID")</label>
             <div class="col-sm-10">
               @Html.EditorFor(model => model.ScreenID, new { htmlAttributes = new { @class = "form-control ", @placeholder=L("ScreenID")} })
               @Html.ValidationMessageFor(model => model.ScreenID, "", new { @class = "text-danger" })
             </div>
         </div>  <div class="form-group">
             <label class="col-sm-2 control-label">@L("ParentID")</label>
             <div class="col-sm-10">
               @Html.EditorFor(model => model.ParentID, new { htmlAttributes = new { @class = "form-control ", @placeholder=L("ParentID")} })
               @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
             </div>
         </div>  <div class="form-group">
             <label class="col-sm-2 control-label">@L("CreatedUser")</label>
             <div class="col-sm-10">
               @Html.EditorFor(model => model.CreatedUser, new { htmlAttributes = new { @class = "form-control ", @placeholder=L("CreatedUser")} })
               @Html.ValidationMessageFor(model => model.CreatedUser, "", new { @class = "text-danger" })
             </div>
         </div>  <div class="form-group">
             <label class="col-sm-2 control-label">@L("CreatedDate")</label>
             <div class="col-sm-10 input-group date">
               @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control ", @placeholder=L("CreatedDate")} })
               <span class="input-group-addon">
                 <i class="fa fa-calendar"></i>
               </span>
               @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
             </div>
         </div>  <div class="form-group">
             <label class="col-sm-2 control-label">@L("IconImage")</label>
             <div class="col-sm-10">
               @Html.EditorFor(model => model.IconImage, new { htmlAttributes = new { @class = "form-control ", @placeholder=L("IconImage")} })
               @Html.ValidationMessageFor(model => model.IconImage, "", new { @class = "text-danger" })
             </div>
         </div>
             
            </div>


        </div>


    }

</div>

  <script>
        $(document).ready(function () {
            $('#NodeID').onfocus(function (e) {
               LoadAutoComplete(this);
            });
			 $('.date').datepicker({
		     todayBtn: "linked",
		     keyboardNavigation: false,
		     forceParse: false,
		     calendarWeeks: true,
		     autoclose: true
		 });
        });

    </script>